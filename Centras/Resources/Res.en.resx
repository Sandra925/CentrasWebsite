<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Restaurant and Hotel "Centras" in Šakiai – the perfect choice for gourmets and travelers

Restaurant and hotel "Centras"  is a place where quality, freshness, and authentic flavors come together to create an unparalleled experience.

Our restaurant, located in the heart of Šakiai, offers an exclusive menu featuring delicious meat and fish dishes, pizzas, homemade sauces, and exquisite desserts. Every dish is prepared only upon order to ensure the highest quality and freshness.

Cozy atmosphere and impeccable service

The restaurant's interior, with warm wooden accents, soft lighting, and soothing music, creates the perfect setting for business lunches, intimate gatherings, or romantic dinners. Our team ensures that every visit is a special one.

We organize events and celebrations

Planning a personal celebration or a business meeting? Restaurant "Centras" offers the opportunity to host receptions in our venue or at your chosen location. Our professional team will take care of the food, service, and welcoming ambiance.

Delicious breakfasts and quality coffee

Start your day with a hearty breakfast featuring fluffy omelets, fresh fruits, and our signature "City Coffee." Additionally, visit the "Skonis ir Kvapas" store, where you will find carefully selected premium teas and exclusive sweets, perfect for any occasion or as a special treat for yourself.</value>
  </data>
  <data name="NavAboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="NavRooms" xml:space="preserve">
    <value>Rooms</value>
  </data>
  <data name="NavMenu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="NavContacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="LoginEmail" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="LoginPw" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LoginNotMember" xml:space="preserve">
    <value>Not a member?</value>
  </data>
  <data name="LoginRegister" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="LoginForgotPw" xml:space="preserve">
    <value>Forgot Password?</value>
  </data>
  <data name="LoginBtn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="RegTitle" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="RegName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RegLastname" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="RegEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="RegPw" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RegPw2" xml:space="preserve">
    <value>Repeat your password</value>
  </data>
  <data name="RegBtn" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegHaveAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="RegLogin" xml:space="preserve">
    <value>Login here</value>
  </data>
</root>