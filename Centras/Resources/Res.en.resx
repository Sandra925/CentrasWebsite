<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Restaurant "Centras" is a place where quality and freshness are our top priorities. Every dish is prepared only upon order – we do not use reheated or centrally pre-prepared food. Our menu offers unique, handcrafted meat and fish dishes, pizzas, homemade sauces, and delicious desserts. Each visit here becomes a distinctive culinary experience, where authentic flavors meet genuine hospitality.</value>
  </data>
  <data name="AboutSlide1" xml:space="preserve">
    <value>Wooden accents, soft lighting, and gentle music create the perfect atmosphere for a romantic dinner or a cozy gathering with friends and family.

Our guests already know – true flavor takes time. To ensure the highest quality, we prepare our dishes from scratch. We are delighted that more and more visitors appreciate this!

The doors of Restaurant "Centras" are open for business lunches with partners, relaxed get-togethers with friends, or romantic evenings. We also organize celebrations, both at our restaurant and at a location of your choice.</value>
  </data>
  <data name="AboutSlide2" xml:space="preserve">
    <value>The rooms are decorated with elements of classical style, combining luxurious fabrics, wooden finishes, and subtle lighting, so that every guest can enjoy relaxation at the highest level.

Our hotel guests can enjoy a hearty and diverse breakfast from 8 to 11 a.m. We offer delicious pancakes with various fillings, fluffy omelets, and assortments of fresh fruits and vegetables. Along with breakfast, we serve fragrant "City Coffee," made from carefully selected Arabica and Robusta beans. It stands out with its smooth taste, a rich aftertaste that lingers, and notes of dark chocolate and nuts.</value>
  </data>
  <data name="AboutSlide3" xml:space="preserve">
    <value>At Skonis ir Kvapas store, you'll find a wide selection of teas – from classic black and green teas to exotic herbal and fruity blends. Each tea is carefully selected to ensure the highest quality and authentic flavor.

In addition, we offer exclusive sweets that perfectly complement your favorite tea – from traditional handcrafted delicacies to modern treats.</value>
  </data>
  <data name="NavAboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="NavRooms" xml:space="preserve">
    <value>Rooms</value>
  </data>
  <data name="NavMenu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="NavContacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="LoginEmail" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="LoginPw" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LoginNotMember" xml:space="preserve">
    <value>Not a member?</value>
  </data>
  <data name="LoginRegister" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="LoginForgotPw" xml:space="preserve">
    <value>Forgot Password?</value>
  </data>
  <data name="LoginBtn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="RegTitle" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="RegName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RegLastname" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="RegEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="RegPw" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RegPw2" xml:space="preserve">
    <value>Repeat your password</value>
  </data>
  <data name="RegBtn" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegHaveAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="RegLogin" xml:space="preserve">
    <value>Login here</value>
  </data>
</root>